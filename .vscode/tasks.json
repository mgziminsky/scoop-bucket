{
    "version": "2.0.0",
    "options": {
        "env": {
            "SCOOP_DEBUG": "true",
        },
        "shell": {
            "executable": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
            ]
        }
    },
    "presentation": {
        "showReuseMessage": false,
    },
    "problemMatcher": [],
    "tasks": [
        {
            "label": "Format Buckets",
            "detail": "Format all manifests inside bucket directory",
            "type": "shell",
            "command": "${workspaceFolder}/bin/formatjson.ps1",
            "args": [],
            "group": "test"
        },
        {
            "label": "Check version (Whole repository)",
            "detail": "Execute checkver for each manifests ini each folder inside repository.",
            "type": "shell",
            "command": "${workspaceFolder}/bin/checkver.ps1",
            "args": [
                "${input:pickUpdateType}"
            ],
            "group": "test"
        },
        {
            "label": "Checkhashes Update",
            "detail": "Check hashes of currently opened manifest.",
            "type": "shell",
            "command": "${workspaceFolder}/bin/checkhashes.ps1",
            "args": [
                "${file}",
                "-ForceUpdate",
            ]
        },
        {
            "label": "Checkver Update",
            "detail": "Check version of currently opened manifest.",
            "type": "shell",
            "command": "${workspaceFolder}/bin/checkver.ps1",
            "args": [
                "${file}",
                "-ForceUpdate",
            ]
        },
        {
            "label": "Missing Checkver",
            "detail": "Check if manifests have checkver",
            "type": "shell",
            "command": "${workspaceFolder}/bin/missing-checkver.ps1",
            "args": [],
            "group": "test",
        },
        {
            "label": "Push Auto-PR",
            "detail": "Execute checkver and push updated manifests.",
            "type": "shell",
            "command": "${workspaceFolder}/bin/auto-pr.ps1",
            "args": [
                "-Push"
            ]
        },
        {
            "label": "Scoop Install",
            "detail": "Install currently opened manifest.",
            "type": "shell",
            "command": "scoop",
            "args": [
                "install",
                "${workspaceFolderBasename}/${fileBasenameNoExtension}",
            ]
        },
        {
            "label": "Scoop ReInstall Purge",
            "detail": "Uninstall (--purge) and install currently opened manifest.",
            "type": "shell",
            "dependsOn": [
                "Scoop Uninstall Purge",
                "Scoop Install"
            ],
            "dependsOrder": "sequence"
        },
        {
            "label": "Scoop Uninstall Purge",
            "detail": "Uninstall currently opened manifest and remove persisted data.",
            "type": "shell",
            "command": "scoop",
            "args": [
                "uninstall",
                "-p",
                "${fileBasenameNoExtension}",
            ]
        },
        {
            "label": "Scoop Update Forced",
            "detail": "Update currently opened manifest.",
            "type": "shell",
            "command": "scoop",
            "args": [
                "update",
                "-f",
                "${fileBasenameNoExtension}",
            ],
            "runOptions": {
                "reevaluateOnRerun": false
            }
        },
        {
            "label": "Test",
            "detail": "Execute Pester tests",
            "type": "shell",
            "command": "${workspaceFolder}/bin/test.ps1",
            "group": "test"
        }
    ],
    "inputs": [
        {
            "id": "pickUpdateType",
            "description": "Select how manifest should be updated.",
            "type": "pickString",
            "options": [
                "-Update",
                "-ForceUpdate",
            ],
            "default": "-Update",
        },
        {
            "id": "pickCheckType",
            "description": "Select what binary should be called. (checkver or checkhashes)",
            "type": "pickString",
            "options": [
                "-Hashes:$false",
                "-Hashes",
            ],
            "default": "-Hashes:$false",
        },
    ],
}
