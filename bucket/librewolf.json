{
    "version": "97.0",
    "description": "An independent fork of Firefox, with the primary goals of privacy, security and user freedom.",
    "homepage": "https://librewolf-community.gitlab.io/",
    "license": "MPL-2.0",
    "url": "https://gitlab.com/librewolf-community/browser/windows/uploads/490a8bed3aa32b8ef04dd48d6316126d/librewolf-97.0.en-US.win64.zip",
    "hash": "d97e700ceb569462419a9401b9f17967762f3d93acab42e6f363962690d9a0be",
    "extract_dir": "librewolf-97.0/LibreWolf",
    "bin": [
        [
            "librewolf.exe",
            "LibreWolf",
            "-profile \"$dir\\profiles\\default\""
        ]
    ],
    "shortcuts": [
        [
            "librewolf.exe",
            "LibreWolf",
            "-profile \"$dir\\profiles\\default\""
        ]
    ],
    "post_install": [
        "$app = \"$dir\\librewolf.exe\".Replace('\\', '\\\\')",
        "$shim = \"$(shimdir)\\librewolf.exe\".Replace('\\', '\\\\')",
        "$scripts = join-path $bucketsdir $($ResolvedObject.Bucket) | join-path -ChildPath scripts/librewolf",
        "'install-associations', 'uninstall-associations' | ForEach-Object {",
        "  if (Test-Path \"$scripts\\$_.reg\") {",
        "    $content = Get-Content \"$scripts\\$_.reg\"",
        "    $content = $content.Replace('$app', $app)",
        "    $content = $content.Replace('$shim', $shim)",
        "    if ($global) {",
        "      $content = $content.Replace('HKEY_CURRENT_USER', 'HKEY_LOCAL_MACHINE')",
        "    }",
        "    $content | Set-Content -Path \"$dir\\$_.reg\"",
        "  }",
        "}"
    ],
    "persist": "profiles",
    "checkver": {
        "url": "https://gitlab.com/api/v4/projects/13852981/releases",
        "jsonpath": "$[0].assets.links",
        "regex": "(?s)(?=.*(?<url>https://.+?/librewolf-(?<version>[\\d\\.]+)\\.en-US\\.win64\\.zip))(?=.*(?<hashUrl>https://.+?/sha256sums\\.txt))"
    },
    "autoupdate": {
        "url": "$matchUrl",
        "extract_dir": "librewolf-$matchHead/LibreWolf",
        "hash": {
            "url": "$matchHashurl"
        }
    }
}
